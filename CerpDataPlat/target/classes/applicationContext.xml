<?xml version="1.0" encoding="GBK" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
	http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/cache
	http://www.springframework.org/schema/cache/spring-cache.xsd">

	<import resource="classpath:spring-mybatis.xml" />
	<!-- ÈÖçÁΩÆ WebService CXF -->
	<import resource="classpath*:META-INF/cxf/cxf.xml" />
	<import
		resource="classpath*:META-INF/cxf/cxf-extension-soap.xml" />
	<import resource="classpath*:META-INF/cxf/cxf-servlet.xml" />

	<context:component-scan
		base-package="org.ssm.cxf" />
	<jaxws:endpoint implementor="org.ssm.cxf.CerpDataInteractiveServiceImpl" address="/CerpDataInteractiveService">
		<jaxws:inInterceptors>
			<!-- ÈÖçÁΩÆÊé•Êî∂Êä•ÊñáÊó•ÂøóÊã¶Êà™Âô? -->
			<bean name="logInInter"
				class="org.apache.cxf.interceptor.LoggingInInterceptor" />
			<!-- ÈÖçÁΩÆÊùÉÈôêÈ™åËØÅÊã¶Êà™Âô? -->
			<bean name="authInterceptor"
				class="org.ssm.cxf.interceptor.AuthInterceptor" />
		</jaxws:inInterceptors>
		<jaxws:outInterceptors>
			<!-- ÈÖçÁΩÆËøîÂõûÊä•ÊñáÊó•ÂøóÊã¶Êà™Âô? -->
			<bean name="logOutInter"
				class="org.apache.cxf.interceptor.LoggingOutInterceptor" />
		</jaxws:outInterceptors>
	</jaxws:endpoint>

	<!-- ÈÖçÁΩÆ ÂàáÊç¢Êï∞ÊçÆÊ∫êÂàáÈù? -->
	<aop:config>
		<aop:aspect id="cerpdb" ref="cerpDBHandler">
			<aop:pointcut id="allGetMethod"
				expression="(execution(* org.ssm.cxf.CerpDataInteractiveServiceImpl.tslCerpDataInteractive(..))) || (execution(* org.ssm.dufy.service.impl.IEmployeeServiceImpl.*(..)))" />
			<aop:around pointcut-ref="allGetMethod" method="setCerpDB" />
		</aop:aspect>
		<aop:aspect id="cerpzsdb" ref="cerpZsDBHandler">
			<aop:pointcut id="allUpdateMethod"
				expression="execution(* org.ssm.cxf.CerpDataInteractiveServiceImpl.tslCerpDataUpdate(..))" />
			<aop:around pointcut-ref="allUpdateMethod" method="setCerpZsDB" />
		</aop:aspect>
	</aop:config>
	
	<!-- ÈÖçÁΩÆ ehcache ÁºìÂ≠ò -->
	<cache:annotation-driven cache-manager="cacheManager"/>
	<bean id="cacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">  
        <property name="configLocation" value="classpath:ehcache.xml"/>  
    </bean>  
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">  
        <property name="cacheManager" ref="cacheManagerFactory"/>  
    </bean>

	<bean id="cerpDBHandler"
		class="org.ssm.dufy.aspectj.CerpDBInterceptor" />
		
	<bean id="cerpZsDBHandler"
		class="org.ssm.dufy.aspectj.CerpZsDBInterceptor" />

	<!-- ÈÖçÁΩÆjdbcÊñá‰ª∂ -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:jdbc_prod.properties" />
	</bean>

	<!-- Êâ´ÊèèÁöÑÂåÖË∑ØÂæÑÔºåËøôÈáå‰∏çÊâ´ÊèèË¢´@ControllerÊ≥®Ëß£ÁöÑÁ±ª --><!--‰ΩøÁî®<context:component-scan/> ÂèØ‰ª•‰∏çÂú®ÈÖçÁΩÆ<context:annotation-config/> -->
	<context:component-scan
		base-package="org.ssm.dufy">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<aop:aspectj-autoproxy proxy-target-class="true" />
	<context:annotation-config></context:annotation-config>

	<!-- ÈÖçÁΩÆ quartzÂÆöÊó∂‰ªªÂä° Ë∞ÉÂ∫¶Âô? -->
	<bean name="quartzScheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="applicationContextSchedulerContextKey"
			value="applicationContextKey" />
		<property name="configLocation"
			value="classpath:quartz.properties" />
	</bean>

</beans>