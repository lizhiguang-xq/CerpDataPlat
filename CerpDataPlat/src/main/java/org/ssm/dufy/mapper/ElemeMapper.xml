<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.ssm.dufy.dao.IElemeDao" >

    <select id="getUserinfos" resultType="map" >
        select
        t.employeeid,
        t.employeename,
        t.zx_entryid,
        t.webpass,
        t.md5count,
        p.placepointid
        from
        pub_employee t,
        gpcs_placepoint p
        where
        t.zx_entryid = p.entryid(+)
        and t.deptid = p.placepointid(+)
        and t.usestatus=1
        and t.zx_entryid = #{entryid}
        and t.employeeid in
        <foreach collection="employeeids" index="index" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>

    <select id="getGoodsClassType" resultType="map" >
        select
        t.classid,t.classname,t.leafflag
        from  pub_goods_class t,
        pub_goods_classtype t1
        where
        t.classtypeid = t1.classtypeid
        and t1.entryid = #{entryid}
        and t1.classtypeid=#{classtypeid}
        order by t.classid
    </select>

    <select id="getGoods" resultType="map" >
        select
        k.placepointid,
        k.goodsid,
        k.opcode,
        k.goodsname,
        k.goodstype,
        k.goodsunit,
        k.priceunit,
        k.price,
        k.barcode,
        k.trademark,
        floor(nvl(sum(nvl(k.goodsqty, 0) - nvl(h.dtlgoodsqty, 0)), 0)) goodsqty
        from
        (
            select t.placepointid,t.goodsid,t.opcode,t.goodsname, t.goodstype,t.goodsunit,t.priceunit,t.price,
                t.barcode,t.trademark,t.storageid,e.goodsqty,e.batchid
            from
            (
                select
                a.placepointid,a.goodsid,c.opcode,c.goodsname,
                c.goodstype,c.goodsunit,a.priceunit,a.price,
                c.barcode,c.trademark,b.storageid
                from
                ngpcs_all_price a,
                gpcs_placepoint b,
                pub_goods c,
                pub_goods_class_dtl d
                where
                a.placepointid = b.placepointid
                and a.goodsid = c.goodsid
                and a.goodsid = d.goodsid
                and b.entryid = #{entryid}
                and d.classid = #{classid}
                and b.placepointid = #{placepointid}
                and a.priceid = #{priceid}
            ) t,
            bms_st_qty_lst e
            where
            t.goodsid = e.goodsid(+)
            and t.storageid = e.storageid(+)
            and e.goodsstatusid(+) = 1
        ) k,
        (
            select f.batchid,g.storageid,f.dtlgoodsqty from
            bms_st_io_dtl_tmp f,
            bms_st_io_doc_tmp g
            where f.inoutid=g.inoutid
        ) h
        where k.batchid = h.batchid(+)
        and k.storageid = h.storageid(+)
        group by
        k.placepointid,
        k.goodsid,
        k.opcode,
        k.goodsname,
        k.goodstype,
        k.goodsunit,
        k.priceunit,
        k.price,
        k.barcode,
        k.trademark
    </select>

    <select id="getGoodsQty" resultType="map" >
        select
        k.goodsid,
        floor(nvl(sum(k.goodsqty-nvl(h.dtlgoodsqty,0)),0)) goodsqty
        from
        (
            select t.goodsid,e.goodsqty,e.batchid,e.storageid
            from
            (
                select pe.goodsid,b.storageid from pub_entry_goods pe, gpcs_placepoint b
                where pe.entryid=b.entryid
                and b.placepointid=#{placepointid}
                and b.entryid=#{entryid}
                and pe.goodsid in
                <foreach collection="array" index="index" item="item" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            ) t,
            bms_st_qty_lst e
            where
            t.goodsid = e.goodsid(+)
            and t.storageid = e.storageid(+)
            and e.goodsstatusid(+) = 1
        ) k,
        (
        select f.batchid,g.storageid,f.dtlgoodsqty from
        bms_st_io_dtl_tmp f,
        bms_st_io_doc_tmp g
        where f.inoutid=g.inoutid
        ) h
        where k.batchid = h.batchid(+)
        and k.storageid = h.storageid(+)
        group by k.goodsid
    </select>

    <select id="getGoodsPrice" resultType="map" >
        select
        a.goodsid,
        a.price
        from
        ngpcs_all_price a,
        gpcs_placepoint b
        where
        a.placepointid = b.placepointid
        and b.placepointid=#{placepointid}
        and b.entryid = #{entryid}
        and a.priceid=#{priceid}
        <if test="lasteventtime != null and lasteventtime != '' ">
            and a.sys_modifydate > to_date(#{lasteventtime},'YYYYMMDDHH24MISS') - 1/96
        </if>
        and a.goodsid in
        <foreach collection="array" index="index" item="item" open="(" close=")" separator=",">
                #{item}
        </foreach>
    </select>

    <select id="getChangeGoodsIds" resultType="map" >
        select distinct t.goodsid
        from bms_st_io_doc t
        where t.storageid =
        (select storageid from gpcs_placepoint a where a.placepointid = #{placepointid})
        and t.credate > to_date(#{lasteventtime},'YYYYMMDDHH24MISS') - 1/96
        and t.goodsid in
        <foreach collection="goodsids" index="index" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        union
        select distinct t.goodsid
        from bms_st_io_doc_tmp t
        where t.storageid =
        (select storageid from gpcs_placepoint a where a.placepointid = #{placepointid})
        and t.credate > to_date(#{lasteventtime},'YYYYMMDDHH24MISS') - 1/96
        and t.goodsid in
        <foreach collection="goodsids" index="index" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>

    <select id="getChangeGoodsIdsByClasstypeid" resultType="map" >
        select distinct t.goodsid
        from bms_st_io_doc t,
        (select c.goodsid from pub_goods_classtype a, pub_goods_class_dtl c
        where a.classtypeid = c.classtypeid and a.entryid = #{entryid} and a.classtypeid=#{classtypeid}) z
        where t.storageid =
        (select storageid from gpcs_placepoint a where a.placepointid = #{placepointid})
        and t.credate > to_date(#{lasteventtime},'YYYYMMDDHH24MISS') - 1/96
        and t.goodsid = z.goodsid
        union
        select distinct t.goodsid
        from bms_st_io_doc_tmp t,
        (select c.goodsid from pub_goods_classtype a, pub_goods_class_dtl c
        where a.classtypeid = c.classtypeid and a.entryid = #{entryid} and a.classtypeid=#{classtypeid}) z
        where t.storageid =
        (select storageid from gpcs_placepoint a where a.placepointid = #{placepointid})
        and t.credate > to_date(#{lasteventtime},'YYYYMMDDHH24MISS') - 1/96
        and t.goodsid = z.goodsid
    </select>


    <select id="getGoodsQtyByClasstypeid" resultType="map" >
        select t.goodsid,
        floor(nvl(sum(e.goodsqty-nvl(f.dtlgoodsqty,0)),0)) goodsqty
        from
        (
        select c.goodsid,b.storageid
        from gpcs_placepoint b,
        pub_goods_classtype a,
        pub_goods_class_dtl c
        where
        a.classtypeid = c.classtypeid(+)
        and b.entryid=a.entryid(+)
        and a.classtypeid = #{classtypeid}
        and b.placepointid = #{placepointid}
        <if test="array != null">
            and c.goodsid in
            <foreach collection="array" index="index" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        ) t,
        bms_st_qty_lst e,
        bms_st_io_dtl_tmp f
        where
        t.goodsid = e.goodsid(+)
        and t.storageid = e.storageid(+)
        and e.batchid = f.batchid(+)
        and e.goodsstatusid(+) = 1
        group by t.goodsid
    </select>

    <select id="getGoodsPriceByClasstypeid" resultType="map" >
        select
        a.goodsid,
        a.price
        from
        ngpcs_all_price a,
        gpcs_placepoint b,
        pub_goods_classtype c,
        pub_goods_class_dtl d
        where
        a.placepointid = b.placepointid
        and b.entryid = c.entryid(+)
        and c.classtypeid = d.classtypeid(+)
        and a.goodsid = d.goodsid
        and b.placepointid=#{placepointid}
        and b.entryid = #{entryid}
        and a.priceid=#{priceid}
        and c.classtypeid=#{classtypeid}
        <if test="lasteventtime != null and lasteventtime != '' ">
            and a.sys_modifydate > to_date(#{lasteventtime},'YYYYMMDDHH24MISS') - 1/96
        </if>
    </select>
</mapper>