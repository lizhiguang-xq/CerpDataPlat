<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.ssm.dufy.dao.IUserDao" >
  <resultMap id="BaseResultMap" type="org.ssm.dufy.entity.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_name" property="user_name" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="entryid" property="entryid" jdbcType="INTEGER" />
    <result column="opers" property="opers" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_name, password, entryid, opers
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_t
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_t
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.ssm.dufy.entity.User" >
    insert into user_t (id, user_name, password, 
      entryid,opers)
    values (#{id,jdbcType=INTEGER}, #{user_name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{entryid,jdbcType=INTEGER}, #{opers,jdbcType=VARCHAR})
  </insert>
  <insert id="insertUser" parameterType="org.ssm.dufy.entity.User" >
    insert into user_t (user_name, password,
      entryid,opers)
    values (#{user_name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{entryid,jdbcType=INTEGER}, #{opers,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ssm.dufy.entity.User" >
    insert into user_t
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="user_name != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="entryid != null" >
        entryid,
      </if>
      <if test="opers != null" >
        opers,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="user_name != null" >
        #{user_name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="entryid != null" >
        #{entryid,jdbcType=INTEGER},
      </if>
      <if test="opers != null" >
        #{opers,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.ssm.dufy.entity.User" >
    update user_t
    <set >
      <if test="user_name != null" >
        user_name = #{user_name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="entryid != null" >
        entryid = #{entryid,jdbcType=INTEGER},
      </if>
      <if test="opers != null" >
        opers = #{opers,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.ssm.dufy.entity.User" >
    update user_t
    set user_name = #{user_name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      entryid = #{entryid,jdbcType=INTEGER},
      opers = #{opers,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="findUser" resultType="org.ssm.dufy.entity.User" parameterType="org.ssm.dufy.entity.User" >
    select 
    <include refid="Base_Column_List" />
    from user_t
    where user_name = #{user_name,jdbcType=VARCHAR} AND password = #{password,jdbcType=VARCHAR}
  </select>
  
  <select id="findUserByName" resultType="org.ssm.dufy.entity.User" parameterType="java.lang.String" >
    select id, user_name, password, entryid, opers
      from user_t
     where user_name = #{uName,jdbcType=VARCHAR}
  </select>

  <select id="pageQueryUserDate" resultType="org.ssm.dufy.entity.User" >
    select id, user_name, password, entryid, opers
      from user_t
      <where>
        <if test="queryText != null">
          and (user_name like concat('%',#{queryText},'%') or entryid = #{queryText})
        </if>
      </where>
      order by id desc
      limit #{start}, #{size}
  </select>

  <select id="pageQueryTotalSize" resultType="int" >
    select count(1) cnt from user_t
    <where>
      <if test="queryText != null">
        and (user_name like concat('%',#{queryText},'%') or entryid = #{queryText})
      </if>
    </where>
  </select>
</mapper>